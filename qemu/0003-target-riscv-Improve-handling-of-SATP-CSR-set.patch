From 33bb5568e0a210b310478855be2877ab72727476 Mon Sep 17 00:00:00 2001
From: Gary Guo <gary@garyguo.net>
Date: Tue, 26 Mar 2019 13:53:23 +0000
Subject: [PATCH 3/8] target/riscv: Improve handling of SATP CSR set

This patch improves handling of SATP CSR set:
* When TVM is set, writing invalid values to SATP should cause exception,
  not being silently ignored.
* If the ASID field is not changed, there is no need to flush TLB.

Signed-off-by: Gary Guo <gary@garyguo.net>
---
 target/riscv/csr.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/target/riscv/csr.c b/target/riscv/csr.c
index 2f00ec87e1..b6ca23cbc7 100644
--- a/target/riscv/csr.c
+++ b/target/riscv/csr.c
@@ -716,16 +716,16 @@ static int write_satp(CPURISCVState *env, int csrno, target_ulong val)
         env->sptbr = val & (((target_ulong)
             1 << (TARGET_PHYS_ADDR_SPACE_BITS - PGSHIFT)) - 1);
     }
-    if (env->priv_ver >= PRIV_VERSION_1_10_0 &&
-        validate_vm(env, get_field(val, SATP_MODE)) &&
-        ((val ^ env->satp) & (SATP_MODE | SATP_ASID | SATP_PPN)))
-    {
+    if (env->priv_ver >= PRIV_VERSION_1_10_0) {
         if (env->priv == PRV_S && get_field(env->mstatus, MSTATUS_TVM)) {
             return -1;
-        } else {
+        }
+        if (!validate_vm(env, get_field(val, SATP_MODE))) return 0;
+        /* We only need to flush TLB per ASID change */
+        if ((val ^ env->satp) & (SATP_MODE | SATP_ASID)) {
             tlb_flush(CPU(riscv_env_get_cpu(env)));
-            env->satp = val;
         }
+        env->satp = val;
     }
     return 0;
 }
-- 
2.17.1

